// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

generator kysely {
  provider = "prisma-kysely"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  BigInt    @id @default(autoincrement())
  email               String    @unique
  authenticationType  String    @default("email") @map("authentication_type")
  createdAt           DateTime  @default(now()) @map("created_at")
  updatedAt           DateTime  @updatedAt @map("updated_at")
  deletedAt           DateTime? @map("deleted_at")

  profile             Profile?
  password            Password?
  @@map("_users")
}

model Profile {
  id          BigInt    @id @default(autoincrement())
  userId      BigInt    @map("user_id") @unique
  firstName   String    @map("first_name")
  middleName  String?   @map("middle_name")
  lastName    String    @map("last_name")
  createdAt   DateTime  @map("created_at") @default(now())
  updatedAt   DateTime  @map("updated_at") @updatedAt 
  deletedAt   DateTime? @map("deleted_at")
  user        User      @relation(fields: [userId], references: [id])

  @@map("profiles")
}

model Password {
  id          BigInt    @id @default(autoincrement())
  userId      BigInt    @map("user_id") @unique
  password    String
  createdAt   DateTime  @map("created_at") @default(now())
  updatedAt   DateTime  @map("updated_at") @updatedAt
  deletedAt   DateTime? @map("deleted_at")

  user        User      @relation(fields: [userId], references: [id])

  @@map("passwords")
}